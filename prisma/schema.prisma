// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum ROLE {
  ADMIN
  REGULAR
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          ROLE
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  tickets       Ticket[]


  @@map("users")
}


model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Ticket {
  id          String    @id @default(cuid())
  name        String
  quantity    Int
  price       Int
  status      Boolean   @default(false)
  fromDate    DateTime
  toDate      DateTime
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  @@unique([fromDate, toDate])
  @@map("tickets")
}